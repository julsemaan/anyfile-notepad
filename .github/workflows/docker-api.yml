name: Docker Image api

on:
  push:
    branches: ['**']
    paths: 
      - 'api/**'
      - '.github/workflows/docker-api.yml'
  workflow_dispatch:
    branches: ['**']

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Kaniko build
        uses: julsemaan/action-kaniko@master
        with:
          registry: ghcr.io
          image: julsemaan/anyfile-notepad/api
          password: ${{ secrets.GITHUB_TOKEN }}
          cache: true
          cache_registry: ghcr.io/julsemaan/anyfile-notepad/api/cache
          path: api/
          extra_args: --push-retry 5

  deploy:
    needs: docker
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Use staging target servers if necessary
        run: |
          echo "TARGET_SERVERS=${{ secrets.ANSIBLE_STAGING_TARGET }}" >> $GITHUB_ENV
          echo "TARGET_IMAGE=staging" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/staging'

      - name: Use production target servers if necessary
        run: |
          echo "TARGET_SERVERS=${{ secrets.ANSIBLE_PRODUCTION_TARGET }}" >> $GITHUB_ENV
          echo "TARGET_IMAGE=production" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/production'

      - name: Setup deploy-env
        run: |
          echo "::set-output name=TARGET_SERVERS::$TARGET_SERVERS"
          echo "::set-output name=TARGET_IMAGE::$TARGET_IMAGE"
        id: deploy-env

      - name: Deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AFN_MANAGER_HOST }}
          username: ${{ secrets.AFN_MANAGER_USERNAME }}
          key: ${{ secrets.AFN_MANAGER_KEY }}
          port: ${{ secrets.AFN_MANAGER_PORT }}
          script: |
            ${{ secrets.AFN_MANAGER_DEPLOY_API_SCRIPT }} ghcr.io/julsemaan/anyfile-notepad/api:${{ steps.deploy-env.outputs.TARGET_IMAGE }} ${{ steps.deploy-env.outputs.TARGET_SERVERS }}


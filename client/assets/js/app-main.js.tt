var application = new ApplicationController();
application.version = "[% APP_VERSION %]";
application.build_id = "[% APP_COMMIT_ID %]";

[%
locales = {
  "de"    = "German",
  "en"    = "English",
  "es"    = "Spanish",
  "fr"    = "French",
  "it"    = "Italian",
  "ja"    = "Japanese",
  "ms"    = "Malay",
  "nl"    = "Dutch",
  "pl"    = "Polish",
  "pt_BR" = "Portuguese (BR)",
  "ro"    = "Romanian",
  "tr"    = "Turkish",
}
%]

var locale_controller = new LocaleController({});

[% FOREACH id IN locales.keys %]
[% file = 'locales/_' _ id _ '.json' %]
locale_controller.addLocale("[% id %]", "[% locales.$id %]", [% INCLUDE $file %]);
[% END %]

function i18n(string) {
  return locale_controller.i18n(string)
}

var context = {
  locales : locale_controller.nameMap,
  grouped_syntaxes : [% SYNTAXES_JSON %],
  themes : [% THEMES_JSON %],
  application : application,
  ace: ace,
};
for(var i=0; i<3; i++){
  context.themes.unshift("dummy");
}

var hbrenderer = new HBRenderer({});
hbrenderer.renderAll(context);

// Shows the 'application is loading' modal
application.startLoading();

application.controllers.dropbox_oauth = new DropboxOAuthController({});

application.controllers.google_oauth = new GoogleOAuthController({
  scopes : [
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
    'https://www.googleapis.com/auth/drive.install',
    'https://www.googleapis.com/auth/drive.appdata',
  ],
});

var user_preferences;

application.controllers.google_oauth.add_to_queue(function(){
  user_preferences = new Preferences(
    function(){
      application.controllers.editor = new EditorController("editor_app", {
        'major_notice_pref' : IntPreference.find('major_notice'),
        'menu_width_pref' : StringPreference.find('menu_width'),
        'flash' : new FlashController({view:'editor_flash'}),
        'file_explorer': new FileExplorerController("file_explorer_container", {
          'height_pref' : StringPreference.find('file_explorer_height'),
          }),
        'favorites_controller': new FavoritesController({
          favorites_pref:ArrayPreference.find("favorites"),
          view: $('ul.favorites'),
        }),
        'recent_files_controller': new RecentFilesController({
          preference:ArrayPreference.find("recent_files"),
          view: $('div.recent-files ul'),
        }),
        'editor_model_bind_controller': new EditorModelBindController({}),
      })
      var editor_controller = application.controllers.editor;
      editor_controller.favorites_controller.parent = editor_controller;
      editor_controller.recent_files_controller.parent = editor_controller;
      editor_controller.preferences_controller = new PreferencesController({});

      editor_controller.file_explorer.parent = editor_controller;
      editor_controller.file_explorer.flash = editor_controller.flash;
      editor_controller.file_explorer.load();

      editor_controller.flash.parent = editor_controller;

      editor_controller.initialize_html();
      
      application.setupDevMode();
      application.setupLocaleFlash();

      var msg;

      [% IF WITH_ADS %]
      msg = "<a href='javascript:void(0)' onclick='javascript:application.popup_upgrade()'>A paid ad-free version of the app is available for 3.99$ per year! Click here to signup!</a>"
      editor_controller.flash.sticky_success(msg);
      [% END %]

      msg = "<a target='_blank' href='/site/privacy_policy.html'>Usage of this application implies agreement with our (short) privacy policy that can be read by clicking here.</a>";
      editor_controller.flash.sticky_success(msg, {msg_uid:msg});
      
      msg = "<a target='_blank' href='/site/terms-of-service.html'>Usage of this application implies agreement with our terms of service that can be read by clicking here.</a>";
      editor_controller.flash.sticky_success(msg, {msg_uid:msg});

      new EditorRouter(editor_controller)
      var menu_controller = new MenuController("menu");
      var top_menu_controller = new TopMenuController("menu", { 'flash' : editor_controller.flash, 'editor':editor_controller, 'menu':menu_controller });
      editor_controller.top_menu = top_menu_controller;

      // check for browser compat
      setTimeout(function(){
        editor_controller.browser_check();
      }, 5000);
    }
  )
})

new UserWidget({selector:"#current_user"});

[% # vim: syntax=javascript 
%]
